from socket import *
import threading
import random

def handleClient(connectionSocket,addr):
    print(addr[0])
    keep_communicating = True

    while keep_communicating:
        sentence = connectionSocket.recv(1024).decode()
        #print(sentence)
        response = "error, please send a proper message"
        if sentence.strip()== "close":
            keep_communicating = False
            response ="closing the connection"

        elif sentence.startswith("Random"):
            response = "Please input first number\n"
            connectionSocket.send(response.encode()) 
            input_number1= connectionSocket.recv(1024).decode()

            response = "Please input Second number\n"
            connectionSocket.send(response.encode()) 
            input_number2=connectionSocket.recv(1024).decode()

            num1 = int(input_number1.strip())  
            num2 = int(input_number2.strip())       

            random_num = random.randint(num1, num2)
            response = f"{random_num}"
          #  if sentence.
          #      random.randint(a1,a2)
          #  reponse ="{a1},{a2}"   
          #  connectionSocket.send(response.encode())   
        elif sentence.startswith("Add"):
            
            response = "Please input first number\n"
            connectionSocket.send(response.encode()) 
            input_number1= connectionSocket.recv(1024).decode()

            response = "Please input Second number\n"
            connectionSocket.send(response.encode()) 
            input_number2=connectionSocket.recv(1024).decode()

            num1 = int(input_number1.strip())  
            num2 = int(input_number2.strip())  

            add_num = num1 + num2
            response = f"{add_num}"

        elif sentence.startswith("Subtract"):

            response = "Please input first number\n"
            connectionSocket.send(response.encode()) 
            input_number1= connectionSocket.recv(1024).decode()

            response = "Please input Second number\n"
            connectionSocket.send(response.encode()) 
            input_number2=connectionSocket.recv(1024).decode()

            num1 = int(input_number1.strip())  
            num2 = int(input_number2.strip()) 

            sub_num = num1 - num2
            response = f"{sub_num}"
        connectionSocket.send(response.encode())

    connectionSocket.close()

serverPort = 12000
serverSocket = socket(AF_INET, SOCK_STREAM)
serverSocket.bind(('', serverPort))
serverSocket.listen(1)
print('Server is ready to receive')
while True:
    connectionSocket, addr = serverSocket.accept()
    threading.Thread(target=handleClient, args=(connectionSocket, addr)).start()